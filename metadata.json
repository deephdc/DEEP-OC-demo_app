{
    "title": "demo_app",
    "summary": "A toy application for demo and testing purposes. We just implement dummy inference, ie. we return the same inputs we are fed.",
    "description": [
        "It can serve as a reference implementation of current best practices in the project (mirroring the [DEEP template](https://github.com/deephdc/cookiecutter-deep)).\n",

        "This demo module implements:\n",
        "* **dummy inference**, ie. we return the same inputs we are fed. If some input is not fed we generate a default one. \n",
        "* **dummy training**, ie. we sleep for some time and output some random monitoring metrics. \n",

        "The two branches in this repo cover the two main usecases: \n",
        "* `master`: this is a reference implementation on how to return a JSON response for predict(). \n",
        "* `return-files`: this is a reference implementation on how to return non-JSON responses for predict(). \n",
        "  This is particularly useful when returning: \n",
        "  - long responses (that could better fit better in a txt file), \n",
        "  - media files (eg. returning an image), \n",
        "  - multiple files (for example returning an image and a text file at the same time, packing them into a zip file)."
    ],
    "keywords": [
        "docker",
        "api-v2"
    ],
    "license": "MIT",
    "date_creation": "2021-10-05",
    "sources": {
		"dockerfile_repo": "https://github.com/deephdc/DEEP-OC-demo_app",
		"docker_registry_repo": "deephdc/deep-oc-demo_app",
		"code": "https://github.com/deephdc/demo_app"
	},
    "continuous_integration": {
        "build_status_badge": "https://jenkins.indigo-datacloud.eu/buildStatus/icon?job=Pipeline-as-code/DEEP-OC-org/DEEP-OC-demo_app/master",
        "build_status_url": "https://jenkins.indigo-datacloud.eu/job/Pipeline-as-code/job/DEEP-OC-org/job/DEEP-OC-demo_app/job/master"
    },
    "tosca": [
        {
            "title": "Mesos (CPU)",
            "url": "https://raw.githubusercontent.com/indigo-dc/tosca-templates/master/deep-oc/deep-oc-marathon-webdav.yml",
            "inputs": [
                "rclone_conf",
                "rclone_url",
                "rclone_vendor",
                "rclone_user",
                "rclone_pass"
            ]
        }
    ]
}
